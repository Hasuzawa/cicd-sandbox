name: Create Package

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        default: 1.0.0
      registry:
        type: string
        default: ghcr.io

jobs:
  format:
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.format.outputs.REPO_NAME }}
    steps:
    - name: format repository name
      id: format
      run: |
        name=${{ github.repository }}
        lower=${name,,}
        echo $lower
        echo "REPO_NAME=$lower" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout node
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
    - uses: actions/checkout@v4
    - name: build
      id: build
      run: |
        cd app
        npm install
        npm run build
    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: app/dist    # relative to repo base, cd of previous steps has no effect
        retention-days: 3

  publish:
    needs:
    - format
    - build
    runs-on: ubuntu-latest
    env:
      # this will be ghcr.io/{author_name}/{repository_name}:version
      # IMAGE_TAG: ${{ inputs.registry }}/${{ needs.format.outputs.name }}:${{ inputs.version }}

      # to use a different name, it is best to label the image with source
      IMAGE_TAG: ${{ inputs.registry }}/${{ github.repository_owner }}/shop:${{ inputs.version }}
      IMAGE_SRC: ${{ github.server_url }}/${{ needs.format.outputs.name }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: dist
        path: app/dist/   # relative to repe base, will create directory if it does not exist
    - name: show image info
      run: |
        echo $IMAGE_TAG
        echo $IMAGE_SRC
    - name: build image
      run: |
        cd app
        docker build \
          --tag ${IMAGE_TAG,,} \
          --file Dockerfile \
          --label version=${{ inputs.version }} \
          --label "org.opencontainers.image.source=$IMAGE_SRC" \
          --label "org.opencontainers.image.description='simple container'" \
          --label "org.opencontainers.image.licenses=MIT" \
          .
    - name: login registry
      env:
        CR_PAT: ${{ secrets.CR_PAT }}   # container registry pat
      run: |
        echo "$CR_PAT" |
          docker login ${{ inputs.registry }} \
            --username GITHUB \
            --password-stdin
    - name: upload image
      run: |
        docker push ${IMAGE_TAG,,}
